blueprint:
  name: Home Generative Agent Scene Analyzer
  author: goruck
  description: >
    Periodically generate camera image scene analysis by prompting the generative agent.
    Sends notifications only if the model detects a requested object in the prompt.
  domain: automation
  source_url: https://github.com/goruck/home-generative-agent/tree/main/blueprints/hga_scene_analysis.yaml

  input:
    time_pattern:
      name: Time Pattern
      description: cron-like time pattern (e.g., /30 for every 30 mins)
      selector:
        text:
          multiline: false
    message:
      name: Prompt
      description: Model prompt to generate camera image scene analysis.
      default: Check the front porch camera for one or more boxes.
      selector:
        text:
          multiline: false
    agent_id:
      name: Agent ID
      description: The conversation agent to process the prompt.
      default: conversation.home_generative_agent
      selector:
        text:
          multiline: false
    conversation_id:
      name: Conversation ID
      description: A unique identifier for the conversation session.
      default: hga_scene_analysis
      selector:
        text:
          multiline: false
    notify_service:
      name: Primary Notify Service
      description: >
        Notify service to send the alert (e.g., notify.notify or notify.my_group).
      default: notify.notify
      selector:
        text:
          multiline: false
    mobile_device:
      name: Mobile Device (Optional)
      description: Select a mobile_app device to also receive a push notification. Leave empty to disable.
      # Important: default ensures the input is always defined even if not selected
      default: ""
      selector:
        device:
          integration: mobile_app
    send_persistent:
      name: Also create a persistent notification
      default: true
      selector:
        boolean: {}

triggers:
  - platform: time_pattern
    minutes: !input time_pattern

conditions: []
  
actions:
  - service: conversation.process
    data:
      agent_id: !input agent_id
      text: !input message
      conversation_id: !input conversation_id
    response_variable: hga_scene_analysis_output

  - choose:
      - conditions:
          - condition: template
            value_template: >-
              {{ 'no' not in (hga_scene_analysis_output['response']['speech']['plain']['speech'] | lower) }}
        sequence:
          # Optional persistent notification
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ !input send_persistent }}"
                sequence:
                  - service: notify.persistent_notification
                    data:
                      title: HGA Scene Analysis
                      message: "{{ hga_scene_analysis_output['response']['speech']['plain']['speech'] }}"
            default: []

          # Primary notify (required)
          - service: !input notify_service
            data:
              title: HGA Scene Analysis
              message: "{{ hga_scene_analysis_output['response']['speech']['plain']['speech'] }}"

          # Optional mobile push (only if a device is selected)
          - choose:
              - conditions:
                  - condition: template
                    value_template: >-
                      {{ (inputs.mobile_device | default('')) | string | length > 0 }}
                sequence:
                  - service: notify.notify
                    data:
                      title: HGA Scene Analysis
                      message: "{{ hga_scene_analysis_output['response']['speech']['plain']['speech'] }}"
                      target:
                        - !input mobile_device
            default: []

mode: single
